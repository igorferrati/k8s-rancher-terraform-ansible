---
- name: Install Docker
  hosts: rancher:nodes
  become: yes
  vars:
    ubuntu_codename: "{{ ansible_distribution_release }}"

  tasks:
    - name: Update package
      apt:
        update_cache: yes
      when: "ansible_os_family == 'Debian'"

    - name: Install dependency
      package:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      when: "ansible_os_family == 'Debian'"

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: "ansible_os_family == 'Debian'"

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ubuntu_codename }} stable
      when: "ansible_os_family == 'Debian'"

    - name: Update package 
      apt:
        update_cache: yes
      when: "ansible_os_family == 'Debian'"

    - name: Install Docker on hosts
      package:
        name: docker-ce
        state: present
      when: "ansible_os_family == 'Debian'"

    - name: Start and enable Docker
      systemd:
        name: docker
        enabled: yes
        state: started
      when: "ansible_os_family == 'Debian'"

    - name: Add user to docker group
      user:
        name: ferrati_igor
        groups: docker
        append: yes
      when: "ansible_os_family == 'Debian'"

- name: Configure Rancher
  hosts: rancher
  become: yes

  tasks:
    - name: Create directory
      file:
        path: /opt/rancher
        state: directory

    - name: Run Rancher container
      docker_container:
        name: myrancher
        image: rancher/rancher:v2.6.8
        privileged: yes
        volumes:
          - /opt/rancher:/var/lib/rancher
        ports:
          - "80:80"
          - "443:443"
        detach: yes

    - name: Sleep to set up Rancher 
      pause:
        seconds: 60
      
    - name: Get Bootstrap Password
      shell: "docker logs myrancher | grep 'Bootstrap Password'"
      register: bootstrap_password

    - name: Display Bootstrap Password
      debug:
        var: bootstrap_password.stdout_lines